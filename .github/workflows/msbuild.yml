name: MSBuild

on:
  workflow_dispatch:
    # This makes the workflow only trigger manually

env:
  SOLUTION_FILE_PATH: nvse_plugin_example/nvse_plugin_example.sln

permissions: write-all

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Build Release
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=Release ${{env.SOLUTION_FILE_PATH}} /p:PostBuildEventUseInBuild=false

    - name: Build Debug
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=Debug ${{env.SOLUTION_FILE_PATH}} /p:PostBuildEventUseInBuild=false

    - name: Generate Timestamp
      run: |
        timestamp=$(date +"%Y%m%d%H%M%S")
        echo "artifact_timestamp=$timestamp" >> $GITHUB_ENV
      shell: bash

    - name: Package Artifacts
      run: |
        mkdir -p artifacts
        Compress-Archive -Path nvse_plugin_example\Release\kNVSE.dll, nvse_plugin_example\Release\kNVSE.pdb -DestinationPath artifacts\kNVSE-Release-${{ env.artifact_timestamp }}.zip
        Compress-Archive -Path nvse_plugin_example\Debug\kNVSE.dll, nvse_plugin_example\Debug\kNVSE.pdb -DestinationPath artifacts\kNVSE-Debug-${{ env.artifact_timestamp }}.zip
      shell: pwsh

    - name: Publish Zipped Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Zipped-Artifacts-${{ env.artifact_timestamp }}
        path: artifacts/

    - name: Get Release
      id: get_release
      uses: cardinalby/git-get-release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag: 'continuous'
        doNotFailIfNotFound: true
    - name: Delete old release if exists
      if: steps.get_release.outputs.id != ''
      uses: dev-drprasad/delete-tag-and-release@v1.0
      with:
        tag_name: continuous
        github_token: ${{ secrets.GITHUB_TOKEN }}
        delete_release: true
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: continuous
        release_name: "Continuous release"
        draft: false
        prerelease: true
        body: |
          Continuous release generated from the latest push to development branch.
    - name: Upload Artifact (Release)
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/kNVSE-Release-${{ env.artifact_timestamp }}.zip
        asset_name: kNVSE-Release-${{ env.artifact_timestamp }}.zip
        asset_content_type: application/zip
    - name: Upload Artifact (Debug)
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/kNVSE-Debug-${{ env.artifact_timestamp }}.zip
        asset_name: kNVSE-Debug-${{ env.artifact_timestamp }}.zip
        asset_content_type: application/zip